#
# Cookbook Name:: chef
# Recipe:: backend
#
# Copyright 2016 Chef Software Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# rubocop:disable LineLength

chef_backend node['fqdn'] do
  bootstrap_node node['fqdn']
  accept_license true
end

chef_server node['fqdn'] do
  version :latest
  config <<-EOS
  # This file generated by chef-backend-ctl gen-server-config
  # Modify with extreme caution.

  fqdn "#{node['fqdn']}"

  use_chef_backend true
  chef_backend_members ["192.168.254.11"]

  haproxy['remote_postgresql_port'] = 5432
  haproxy['remote_elasticsearch_port'] = 9200

  # Specify that postgresql is an external database, and provide the
  # VIP of this cluster.  This prevents the chef-server instance
  # from creating it's own local postgresql instance.
  postgresql['external'] = true
  postgresql['vip'] = '127.0.0.1'
  postgresql['db_superuser'] = 'chef_pgsql'
  postgresql['db_superuser_password'] = 'dca2655636ccc75b0eaed0522fd57d03d0132f42e56c5158213de9dd23f27bc55581227f4bfff2b9b7749bd124dd8f2f8804'

  # These settings ensure that we use remote elasticsearch
  # instead of local solr for search.  This also
  # set search_queue_mode to 'batch' to remove the indexing
  # dependency on rabbitmq, which is not supported in this HA configuration.
  opscode_solr4['external'] = true
  opscode_solr4['external_url'] = 'http://127.0.0.1:9200'
  opscode_erchef['search_provider'] = 'elasticsearch'
  opscode_erchef['search_queue_mode'] = 'batch'

  # HA mode requires sql-backed storage for bookshelf.
  bookshelf['storage_type'] = :sql

  # RabbitMQ settings

  # At this time we are not providing a rabbit backend. Note that this makes
  # this incompatible with reporting and analytics unless you're bringing in
  # an external rabbitmq.
  rabbitmq['enable'] = false
  rabbitmq['management_enabled'] = false
  rabbitmq['queue_length_monitor_enabled'] = false

  # Opscode Expander
  #
  # opscode-expander isn't used when the search_queue_mode is batch.  It
  # also doesn't support the elasticsearch backend.
  opscode_expander['enable'] = false

  # Prevent startup failures due to missing rabbit host
  dark_launch['actions'] = false

  # Cookbook Caching
  opscode_erchef['nginx_bookshelf_caching'] = :on
  opscode_erchef['s3_url_expiry_window_size'] = '50%'

  oc_id['applications'] = {
    "supermarket"=>{"redirect_uri"=>"https://supermarket.local/auth/chef_oauth2/callback"}
  }
EOS
  addons manage: { version: '2.4.3', config: '' },
         :"push-jobs-server" => { version: '2.1.0', config: '' }
  accept_license true
  data_collector_url 'https://automate.local/data-collector/v0/'  if search(:node, 'name:automate-centos-72', filter_result: { 'name' => ['name'] }) # ~FC003
end
